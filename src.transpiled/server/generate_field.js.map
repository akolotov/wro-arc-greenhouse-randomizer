{"version":3,"sources":["../../src/server/generate_field.js"],"names":["generator_path","util","require","generateField","exec","promisify","child_process","stdout","stderr","f","JSON","parse","toString","length","err"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,cAAc,GAAG,yBAAvB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;AACA;AACA;AACA;;;AACe,eAAeC,aAAf,GAA+B;AAC1C,QAAMC,IAAI,GAAGH,IAAI,CAACI,SAAL,CAAeC,aAAa,CAACF,IAA7B,CAAb;AAEA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqB,MAAMJ,IAAI,CAACJ,cAAD,CAArC;AAEA,MAAIS,CAAC,GAAG,EAAR;AACAA,EAAAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAJ;AACA,MAAGC,MAAM,CAACI,QAAP,GAAkBC,MAAlB,GAA2B,CAA9B,EACIJ,CAAC,CAACK,GAAF,GAAQN,MAAR,CADJ,KAEK;AACDC,IAAAA,CAAC,CAACK,GAAF,GAAQ,IAAR;AACH;AACD,SAAOL,CAAP;AACH","sourcesContent":["import * as child_process from \"child_process\";\nconst generator_path = \"generator/bin/generator\";\nconst util = require('util');\n\n// it's exported just for means of testing\n// also it's worth noticing that the function does not exactly generate the field, but calls a generator, which is an executable file,\n// and returns an object built from JSON representation of a field provided by stdout of the called generator,\n// also saving stderr as a field of the object\nexport default async function generateField() {\n    const exec = util.promisify(child_process.exec);\n\n    const { stdout, stderr } = await exec(generator_path);\n\n    let f = {};\n    f = JSON.parse(stdout);\n    if(stderr.toString().length > 0)\n        f.err = stderr;\n    else {\n        f.err = null;\n    }\n    return f;\n}\n"],"file":"generate_field.js"}