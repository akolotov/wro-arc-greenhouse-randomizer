{"version":3,"sources":["../../src/util/encode_field.js"],"names":["encodePoint","p","String","fromCharCode","charCodeAt","Math","round","x","y","encodeField","field","res","parkingZone","dir","parkingZoneDirection","blueIdx","boxColors","indexOf","boxes","firstIdx","cubeColors","secondIdx"],"mappings":";;;;;;;;AACO,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AAC3B,SAAOC,MAAM,CAACC,YAAP,CAAoB,IAAIC,UAAJ,CAAe,CAAf,IAAoBC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,CAAF,GAAI,GAAf,CAAxC,IAA+DL,MAAM,CAACC,YAAP,CAAoB,IAAIC,UAAJ,CAAe,CAAf,IAAoBC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACO,CAAF,GAAI,GAAf,CAAxC,CAAtE;AACH;;AAIc,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,MAAIC,GAAG,GAAG,EAAV,CADuC,CAGvC;;AACAA,EAAAA,GAAG,IAAIX,WAAW,CAACU,KAAK,CAACE,WAAN,CAAkB,CAAlB,CAAD,CAAlB,CAJuC,CAMvC;;AACA,MAAIC,GAAG,GAAG;AAACN,IAAAA,CAAC,EAAEG,KAAK,CAACE,WAAN,CAAkB,CAAlB,EAAqBL,CAArB,GAAyBG,KAAK,CAACI,oBAAN,CAA2BP,CAAxD;AACCC,IAAAA,CAAC,EAAEE,KAAK,CAACE,WAAN,CAAkB,CAAlB,EAAqBJ,CAArB,GAAyBE,KAAK,CAACI,oBAAN,CAA2BN;AADxD,GAAV;AAEAG,EAAAA,GAAG,IAAIX,WAAW,CAACa,GAAD,CAAlB,CATuC,CAWvC;;AACA,MAAIE,OAAO,GAAGL,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwB,MAAxB,CAAd;AACAN,EAAAA,GAAG,IAAIX,WAAW,CAACU,KAAK,CAACQ,KAAN,CAAYH,OAAZ,CAAD,CAAlB,CAbuC,CAevC;;AACA,MAAII,QAAQ,GAAGT,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwBP,KAAK,CAACU,UAAN,CAAiBL,OAAjB,CAAxB,CAAf;AACAJ,EAAAA,GAAG,IAAIX,WAAW,CAACU,KAAK,CAACQ,KAAN,CAAYC,QAAZ,CAAD,CAAlB,CAjBuC,CAmBvC;;AACA,MAAIE,SAAS,GAAGX,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwBP,KAAK,CAACU,UAAN,CAAiBD,QAAjB,CAAxB,CAAhB;AACAR,EAAAA,GAAG,IAAIX,WAAW,CAACU,KAAK,CAACQ,KAAN,CAAYG,SAAZ,CAAD,CAAlB;AAEA,SAAOV,GAAP;AACH","sourcesContent":["\nexport function encodePoint(p) {\n    return String.fromCharCode('A'.charCodeAt(0) + Math.round(p.x/115)) + String.fromCharCode('A'.charCodeAt(0) + Math.round(p.y/115));\n}\n\n\n\nexport default function encodeField(field) {\n    let res = \"\";\n\n    // parking zone top left point\n    res += encodePoint(field.parkingZone[0]);\n\n    // parking zone direction point\n    let dir = {x: field.parkingZone[0].x + field.parkingZoneDirection.x,\n               y: field.parkingZone[0].y + field.parkingZoneDirection.y};\n    res += encodePoint(dir);\n\n    // blue box\n    let blueIdx = field.boxColors.indexOf(\"Blue\");\n    res += encodePoint(field.boxes[blueIdx]);\n\n    // first box\n    let firstIdx = field.boxColors.indexOf(field.cubeColors[blueIdx]);\n    res += encodePoint(field.boxes[firstIdx]);\n\n    // second box\n    let secondIdx = field.boxColors.indexOf(field.cubeColors[firstIdx]);\n    res += encodePoint(field.boxes[secondIdx]);\n\n    return res;\n}\n"],"file":"encode_field.js"}