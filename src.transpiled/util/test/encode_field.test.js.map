{"version":3,"sources":["../../../src/util/test/encode_field.test.js"],"names":["describe","it","field","to","be","a","s","p","x","y","equal"],"mappings":"AAAA;;AAEA;;AACA;;AACA;;;;;;AAIAA,QAAQ,CAAC,aAAD,EAAgB,YAAY;AAChCC,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC7D,QAAIC,KAAK,GAAG,0BAAZ;AACA,sBAAO,2BAAYA,KAAZ,CAAP,EAA2BC,EAA3B,CAA8BC,EAA9B,CAAiCC,CAAjC,CAAmC,QAAnC;AACH,GAHC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAY;AAChE,QAAIC,KAAK,GAAG,0BAAZ;AACA,QAAII,CAAC,GAAG,2BAAYJ,KAAZ,CAAR;AACA,sBAAOI,CAAP,EAAUH,EAAV,CAAaC,EAAb,CAAgBC,CAAhB,CAAkB,QAAlB,EAHgE,CAIhE;AACH,GALC,CAAF;AAMH,CAXO,CAAR;AAaAL,QAAQ,CAAC,aAAD,EAAgB,YAAY;AAChCC,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC7D,QAAIM,CAAC,GAAG;AAACC,MAAAA,CAAC,EAAE,MAAI,CAAR;AAAWC,MAAAA,CAAC,EAAE,MAAI;AAAlB,KAAR;AACA,sBAAO,+BAAYF,CAAZ,CAAP,EAAuBJ,EAAvB,CAA0BC,EAA1B,CAA6BC,CAA7B,CAA+B,QAA/B;AACH,GAHC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAY;AAChE,QAAIM,CAAC,GAAG;AAACC,MAAAA,CAAC,EAAE,MAAI,CAAR;AAAWC,MAAAA,CAAC,EAAE,MAAI;AAAlB,KAAR;AACA,sBAAO,+BAAYF,CAAZ,CAAP,EAAuBJ,EAAvB,CAA0BC,EAA1B,CAA6BM,KAA7B,CAAmC,IAAnC;AACH,GAHC,CAAF;AAIH,CATO,CAAR","sourcesContent":["\"use strict\";\n\nimport {default as encodeField, encodePoint} from '../encode_field.js';\nimport getMockField from './mock_field';\nimport {expect} from 'chai';\n\n\n\ndescribe('encodeField', function () {\n    it('Successfully encodes a field to a valid string', function () {\n        let field = getMockField();\n        expect(encodeField(field)).to.be.a('string');\n    });\n    it('Successfully encodes a field with correct symbols', function () {\n        let field = getMockField();\n        let s = encodeField(field);\n        expect(s).to.be.a('string');\n        // TODO\n    });\n});\n\ndescribe('encodePoint', function () {\n    it('Successfully encodes a point to a valid string', function () {\n        let p = {x: 115*7, y: 115*10};\n        expect(encodePoint(p)).to.be.a('string');\n    });\n    it('Successfully encodes a point with correct symbols', function () {\n        let p = {x: 115*7, y: 115*10};\n        expect(encodePoint(p)).to.be.equal('HK');\n    });\n});\n"],"file":"encode_field.test.js"}